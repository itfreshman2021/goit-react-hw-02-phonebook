{"version":3,"sources":["App.module.css","App.js","index.js"],"names":["module","exports","phonebook","form","label","input","button","li","span","App","state","contacts","id","name","number","filter","handleChange","event","_this","setState","Object","defineProperty","currentTarget","value","HandleSubmit","preventDefault","contactNew","uuidv4","_ref","concat","toConsumableArray","reset","getVisibleContacts","normalizedFilter","toLowerCase","contact","toLocaleLowerCase","includes","visibleContacts","this","react_default","a","createElement","Fragment","className","s","onSubmit","type","pattern","title","onChange","required","map","visibleContact","key","React","Component","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.79662730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__2Hvy5\",\"form\":\"App_form__1MVrC\",\"label\":\"App_label__1XOQk\",\"input\":\"App_input__3Dizx\",\"button\":\"App_button__1FDgx\",\"li\":\"App_li__1NOXF\",\"span\":\"App_span__3a-H7\"};","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  HandleSubmit = event => {\n    event.preventDefault();\n\n    const contactNew = { id: uuidv4(), name: this.state.name, number: this.state.number };\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contactNew] }));\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <div className={s.phonebook}>\n          <h1>Phonebook</h1>\n          <form onSubmit={this.HandleSubmit} className={s.form}>\n            <label className={s.label}>\n              Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required\n                className={s.input}\n              />\n            </label>\n            <label className={s.label}>\n              Number\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                value={this.state.number}\n                onChange={this.handleChange}\n                required\n                className={s.input}\n              />\n            </label>\n\n            <button type=\"submit\" className={s.button}>\n              Add contact\n            </button>\n          </form>\n          <h2>Contacts</h2>\n          <label className={s.label}>\n            Find contacts by name\n            <input\n              type=\"text\"\n              name=\"filter\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              value={this.state.filter}\n              onChange={this.handleChange}\n              required\n              className={s.input}\n            />\n          </label>\n          <ul>\n            {visibleContacts.map(visibleContact => {\n              const { id, name, number } = visibleContact;\n              return (\n                <li key={id} className={s.li}>\n                  <p>\n                    {name}:<span className={s.span}>{number}</span>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}