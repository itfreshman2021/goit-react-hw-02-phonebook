{"version":3,"sources":["App.module.css","App.js","index.js"],"names":["module","exports","phonebook","form","label","input","button","li","span","App","state","contacts","name","number","handleChange","event","_this","setState","Object","defineProperty","currentTarget","value","HandleSubmit","preventDefault","contactNew","id","uuidv4","_ref","concat","toConsumableArray","reset","react_default","a","createElement","Fragment","className","s","onSubmit","this","type","pattern","title","onChange","required","map","contact","key","React","Component","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,UAAA,uBAAAC,KAAA,kBAAAC,MAAA,mBAAAC,MAAA,mBAAAC,OAAA,oBAAAC,GAAA,gBAAAC,KAAA,kOCkFHC,8MA7EbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,MAGVC,aAAe,SAAAC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBH,EAAMK,cAAcR,KAAOG,EAAMK,cAAcC,WAGlEC,aAAe,SAAAP,GACbA,EAAMQ,iBAEN,IAAMC,EAAa,CAAEC,GAAIC,cAAUd,KAAMI,EAAKN,MAAME,KAAMC,OAAQG,EAAKN,MAAMG,QAC7EG,EAAKC,SAAS,SAAAU,GAAA,IAAGhB,EAAHgB,EAAGhB,SAAH,MAAmB,CAAEA,SAAQ,GAAAiB,OAAAV,OAAAW,EAAA,EAAAX,CAAMP,GAAN,CAAgBa,OAC3DR,EAAKc,WAGPA,MAAQ,WACNd,EAAKC,SAAS,CAAEL,KAAM,GAAIC,OAAQ,kDAGpC,WACE,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAElC,WAChB6B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAMI,SAAUC,KAAKhB,aAAca,UAAWC,IAAEjC,MAC9C4B,EAAAC,EAAAC,cAAA,SAAOE,UAAWC,IAAEhC,OAApB,OAEE2B,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,kcACNpB,MAAOiB,KAAK5B,MAAME,KAClB8B,SAAUJ,KAAKxB,aACf6B,UAAQ,EACRR,UAAWC,IAAE/B,SAGjB0B,EAAAC,EAAAC,cAAA,SAAOE,UAAWC,IAAEhC,OAApB,SAEE2B,EAAAC,EAAAC,cAAA,SACEM,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,giBACNpB,MAAOiB,KAAK5B,MAAMG,OAClB6B,SAAUJ,KAAKxB,aACf6B,UAAQ,EACRR,UAAWC,IAAE/B,SAIjB0B,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASJ,UAAWC,IAAE9B,QAAnC,gBAIFyB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACGK,KAAK5B,MAAMC,SAASiC,IAAI,SAAAC,GACvB,IAAQpB,EAAqBoB,EAArBpB,GAAIb,EAAiBiC,EAAjBjC,KAAMC,EAAWgC,EAAXhC,OAClB,OACEkB,EAAAC,EAAAC,cAAA,MAAIa,IAAKrB,EAAIU,UAAWC,IAAE7B,IACxBwB,EAAAC,EAAAC,cAAA,SACGrB,EADH,IACSmB,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAE5B,MAAOK,iBAnEnCkC,IAAMC,WCAxBC,IAASC,OACPnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,WAAP,KACEpB,EAAAC,EAAAC,cAACmB,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.863b43d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__2Hvy5\",\"form\":\"App_form__1MVrC\",\"label\":\"App_label__1XOQk\",\"input\":\"App_input__3Dizx\",\"button\":\"App_button__1FDgx\",\"li\":\"App_li__1NOXF\",\"span\":\"App_span__3a-H7\"};","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  HandleSubmit = event => {\n    event.preventDefault();\n\n    const contactNew = { id: uuidv4(), name: this.state.name, number: this.state.number };\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contactNew] }));\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <div className={s.phonebook}>\n          <h1>Phonebook</h1>\n          <form onSubmit={this.HandleSubmit} className={s.form}>\n            <label className={s.label}>\n              Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                value={this.state.name}\n                onChange={this.handleChange}\n                required\n                className={s.input}\n              />\n            </label>\n            <label className={s.label}>\n              Number\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                value={this.state.number}\n                onChange={this.handleChange}\n                required\n                className={s.input}\n              />\n            </label>\n\n            <button type=\"submit\" className={s.button}>\n              Add contact\n            </button>\n          </form>\n          <h2>Contacts</h2>\n          <ul>\n            {this.state.contacts.map(contact => {\n              const { id, name, number } = contact;\n              return (\n                <li key={id} className={s.li}>\n                  <p>\n                    {name}:<span className={s.span}>{number}</span>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}